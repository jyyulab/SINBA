% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SINBA.functions_0.1.4.R
\name{find_max_sum_submatrix}
\alias{find_max_sum_submatrix}
\title{find_max_sum_submatrix}
\usage{
find_max_sum_submatrix(
  matrix,
  n,
  m,
  use_popSize = 50,
  use_maxiter = 100,
  use_run = 50,
  use_suggestions = NULL
)
}
\arguments{
\item{matrix}{a deltaZ score matrix for seed and driver layout optimization. It will be created by run \code{convert_deltaZ2_matrix}.}

\item{n}{row numbers.}

\item{m}{colum number}

\item{use_popSize}{Population size, GA::ga function parameter,default=50.}

\item{use_maxiter}{Maximum iterations, GA::ga function parameter, default=100.}

\item{use_run}{Early stopping criterion,GA::ga function parameter, default=50.}

\item{use_suggestions}{Optional: initial solutions, GA::ga function parameter,default=NULL.}
}
\description{
Main function to find the maximum sum deltaZ score submatrix using GA to optimize the screening layout of seed and partner drivers.
}
\examples{

generate_matrix2<-function(n, m) {
    out_mat<-matrix(sample(1:10, 10 * n * 10 * m, replace = TRUE), nrow = 10 * n, ncol = 10 * m)
    rownames(out_mat)<-paste0("R_",1:dim(out_mat)[1])
    colnames(out_mat)<-paste0("C_",1:dim(out_mat)[2])
    return(out_mat)
}
base_matrix<-generate_matrix2(n=5,m=10)
out<-find_max_sum_submatrix(matrix=base_matrix, n=4, m=3)
opt_mat<-out$submatrix
\dontrun{
}
}
