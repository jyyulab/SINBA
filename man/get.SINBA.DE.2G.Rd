% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SINBA.functions_0.1.4.R
\name{get.SINBA.DE.2G}
\alias{get.SINBA.DE.2G}
\title{get.SINBA.DE.2G}
\usage{
get.SINBA.DE.2G(
  eset = NULL,
  G1 = NULL,
  G0 = NULL,
  G1_name = NULL,
  G0_name = NULL,
  verbose = TRUE,
  do.log2 = F,
  test.use = "limma",
  random_effect = NULL
)
}
\arguments{
\item{eset}{ExpressionSet class object, contains gene expression data or driver activity data.}

\item{G1}{a vector of characters, the sample names of experimental group.}

\item{G0}{a vecotr of characters, the sample names of control group.}

\item{G1_name}{character, the name of experimental group (e.g. "Male"). Default is "G1".}

\item{G0_name}{character, the name of control group (e.g. "Female"). Default is "G0".}

\item{verbose}{logical, if TRUE, sample names of both groups will be printed. Default is TRUE.}

\item{test.use}{character, users can choose one of the methods c("limma","t.test","wilcox"). Default is "limma"}

\item{random_effect}{a vector of characters, vector or factor specifying a blocking variable.Default is NULL, no random effect will be considered.}
}
\value{
Return a data frame. Rows are genes/drivers, columns are "ID","Z-statistics","P.Value","adj.P.Val","logFC"
}
\description{
Differential Expression Analysis and Differential Activity Analysis Between 2 Sample Groups. \code{get.SINBA.DE.2G} is a function performs differential gene expression analysis and differential driver activity analysis between control group (parameter G0) and experimental group (parameter G1), using different methods.
}
\examples{
phe_info <- Biobase::pData(SINBA.par$cal.eset)
phe_info$subgroup<-phe_info$das_sensitivity_category1
G0  <- rownames(phe_info)[which(phe_info$`subgroup`=="resistant")] # get sample list for G0
G1  <- rownames(phe_info)[which(phe_info$`subgroup`=="sensitive")] # get sample list for G1
ac_eset<-generate.SINBA.eset(exp_mat=ac_mat, phenotype_info=phe_info, feature_info=NULL, annotation_info="")
DE_gene_limma <- get.SINBA.DE.2G(eset=SINBA.par$cal.eset,G1=G1,G0=G0,G1_name="sensitive",G0_name='resistant',test.use="limma")
DA_gene_limma <- get.SINBA.DE.2G(eset=ac_eset,G1=G1,G0=G0,G1_name="sensitive",G0_name='resistant',test.use="limma")
\dontrun{
}
}
